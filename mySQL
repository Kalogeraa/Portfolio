SELECT ProductName FROM `products`;
SELECT DISTINCT Country FROM `suppliers`;
SELECT * FROM `products` WHERE Price <= 30;
SELECT OrderID, EmployeeID FROM `orders` WHERE EmployeeID = 4;
SELECT * FROM `customers` WHERE ContactName = "Maria Anders";
SELECT * FROM `order_details` WHERE Quantity > 39;
SELECT * FROM `suppliers` WHERE Country = "USA" AND City = "Boston";
SELECT * FROM `suppliers` WHERE Country = "UK" OR Country = "Germany";
SELECT * FROM `suppliers` WHERE NOT Country = "USA";
SELECT * FROM `customers` WHERE City IS NULL;
SELECT * FROM `customers` WHERE City IS NOT NULL;


# The maximum value for a column 'Price'
SELECT MAX(Price) FROM 'products';

# The maximum value for a column 'Price'
SELECT MIN(Price) FROM 'products';


How many rows were returned from a given query
SELECT COUNT(SupplierID) FROM 'products' WHERE SupplierID = 1;

The average value of the column
SELECT AVG(Price) FROM 'products' WHERE SupplierID = 1;

The sum of the column
SELECT SUM(Price) FROM 'products' WHERE SupplierID = 1;


Getting contacts that end with the letter 'n'
SELECT * FROM 'customers' WHERE ContactName LIKE '%n';

Getting contacts that start with the letter 'p' and end with the letter 'n'
SELECT * FROM 'customers' WHERE ContactName LIKE 'p%n';

Getting contacts where the second letter is 'a'
SELECT * FROM 'customers' WHERE ContactName LIKE '_a%';

SELECT * FROM 'customers' WHERE ContactName LIKE '_ar%';
SELECT * FROM 'customers' WHERE ContactName LIKE '_ar%s';

Getting contacts with a minimum of 5 letters
SELECT * FROM 'customers' WHERE ContactName LIKE '_____%';

Compartments
SELECT * FROM `orders` WHERE OrderDate >= '1996-07-01' AND OrderDate <= '1996-07-10';
SELECT * FROM `orders` WHERE OrderDate BETWEEN '1996-07-02' AND '1996-07-12';
SELECT * FROM `orders` WHERE EmployeeID BETWEEN 1 AND 3;

The total price of products for which Unit starts from 12
SELECT SUM(Price) AS PriceSUM FROM `products` WHERE Unit LIKE '12%';

SELECT COUNT(*) FROM `products`;
SELECT SupplierID, COUNT(*) FROM `products` GROUP BY SupplierID;
SELECT SupplierID, SUM(Price) FROM `products` GROUP BY SupplierID ORDER BY SUM(Price) DESC;
SELECT SupplierID, SUM(Price) FROM `products` GROUP BY SupplierID ORDER BY SUM(Price) ASC;
SELECT SupplierID, SUM(Price), COUNT(ProductID) FROM `products` GROUP BY SupplierID ORDER BY SUM(Price) ASC;
SELECT CategoryID, COUNT(*) AS ProductNumber FROM `products` GROUP BY CategoryID;
SELECT CategoryID, COUNT(*) AS ProductNumber, SUM(Price) FROM `products` GROUP BY CategoryID;
SELECT * FROM `categories` INNER JOIN `products` ON categories.CategoryID = products.CategoryID;
SELECT CategoryName, Description, COUNT(*) FROM `categories` INNER JOIN `products` ON categories.CategoryID = products.CategoryID GROUP BY CategoryName;
SELECT products.CategoryID, CategoryName, Description, COUNT(*) FROM `categories` INNER JOIN `products` ON categories.CategoryID = products.CategoryID GROUP BY CategoryName;
